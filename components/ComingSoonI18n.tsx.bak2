"use client";

import { useState, useEffect } from "react";
import { motion } from "framer-motion";
import Image from "next/image";
import { useTranslations, useLocale } from 'next-intl';
import LanguageSwitcher from './LanguageSwitcher';

interface ComingSoonProps {
  launchDate?: string;
  showNewsletter?: boolean;
}

export default function ComingSoonI18n({
  launchDate = "Q1 2025",
  showNewsletter = true
}: ComingSoonProps) {
  const [email, setEmail] = useState("");
  const [isSubmitted, setIsSubmitted] = useState(false);
  const [isHovered, setIsHovered] = useState(false);
  const [newsletterEnabled, setNewsletterEnabled] = useState(true);
  const t = useTranslations();
  const locale = useLocale();
  const isRTL = locale === 'ar';

  useEffect(() => {
    // Check settings including maintenance mode
    const checkSettings = async () => {
      try {
        const response = await fetch('/api/public/settings');
        if (response.ok) {
          const settings = await response.json();
          setNewsletterEnabled(settings.enable_newsletter ?? true);

          // Check maintenance mode
          if (settings.maintenance_mode === true) {
            // Redirect to maintenance page
            window.location.href = '/maintenance';
          }
        }
      } catch (error) {
        console.error('Error fetching settings:', error);
      }
    };

    checkSettings();
  }, []);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (email) {
      try {
        const response = await fetch('/api/newsletter', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            email,
            source: 'COMING_SOON',
          }),
        });

        const data = await response.json();

        if (response.ok) {
          setIsSubmitted(true);
          setTimeout(() => setIsSubmitted(false), 5000);
          setEmail("");
        } else {
          console.error('Subscription failed:', data.error);
        }
      } catch (error) {
        console.error('Error submitting email:', error);
      }
    }
  };

  // Service items with translations
  const serviceItems = [
    {
      icon: (
        <svg className="w-10 h-10" fill="none" stroke="currentColor" strokeWidth="1.5" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" d="M9.53 16.122a3 3 0 00-5.78 1.128 2.25 2.25 0 01-2.4 2.245 4.5 4.5 0 008.4-2.245c0-.399-.078-.78-.22-1.128zM15.75 11.25a3 3 0 00-5.78 1.128M15.75 11.25a3 3 0 015.78 1.128m-5.78-1.128a2.25 2.25 0 012.4-2.245 4.5 4.5 0 01-8.4 2.245m0 0a2.25 2.25 0 012.4-2.245M3 20.25v-4.5m0 0h4.5" />
        </svg>
      ),
      titleKey: "services.design.card.title",
      subtitleKey: "services.design.card.subtitle",
      color: "#00A6FB"
    },
    {
      icon: (
        <svg className="w-10 h-10" fill="none" stroke="currentColor" strokeWidth="1.5" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" d="M21 7.5l-2.25-1.313M21 7.5v6.75l-2.25 1.313M21 7.5l-2.25-1.313M3 7.5l2.25-1.313M3 7.5l2.25 1.313M3 7.5v6.75l2.25 1.313m6-13.126L9 5.787m0 0L6.75 7.5M9 5.787v6.75m6-6.75L12.75 7.5M15 5.787V12.537m-6 6.75l2.25-1.313m0 0l2.25 1.313M9 18.974V12.224" />
        </svg>
      ),
      titleKey: "services.development.card.title",
      subtitleKey: "services.development.card.subtitle",
      color: "#7C4DFF"
    },
    {
      icon: (
        <svg className="w-10 h-10" fill="none" stroke="currentColor" strokeWidth="1.5" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" d="M3.75 13.5l10.5-11.25L12 10.5h8.25L9.75 21.75 12 13.5H3.75z" />
        </svg>
      ),
      titleKey: "services.innovation.title",
      subtitleKey: "services.innovation.subtitle",
      color: "#00E5CC"
    },
    {
      icon: (
        <svg className="w-10 h-10" fill="none" stroke="currentColor" strokeWidth="1.5" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" d="M7.5 14.25v2.25m3-4.5v4.5m3-6.75v6.75m3-9v9M6 20.25h12A2.25 2.25 0 0020.25 18V6A2.25 2.25 0 0018 3.75H6A2.25 2.25 0 003.75 6v12A2.25 2.25 0 006 20.25z" />
        </svg>
      ),
      titleKey: "services.delivery.title",
      subtitleKey: "services.delivery.subtitle",
      color: "#60A5FA"
    }
  ];

  return (
    <div className="relative min-h-screen overflow-hidden" style={{ backgroundColor: '#0F1419' }}>
      {/* Tech-Creative Animated Background */}
      <div className="absolute inset-0">
        {/* Dot Grid Pattern */}
        <div
          className="absolute inset-0"
          style={{
            backgroundImage: `radial-gradient(circle at center, rgba(0, 166, 251, 0.15) 0%, transparent 2px)`,
            backgroundSize: '40px 40px',
            backgroundPosition: '0 0, 20px 20px',
            opacity: 0.4,
          }}
        />

        {/* Geometric Network Pattern */}
        <svg className="absolute inset-0 w-full h-full opacity-20" preserveAspectRatio="none">
          <defs>
            <pattern id="network-pattern" x="0" y="0" width="200" height="200" patternUnits="userSpaceOnUse">
              <circle cx="0" cy="0" r="2" fill="#00A6FB" opacity="0.5" />
              <circle cx="200" cy="0" r="2" fill="#7C4DFF" opacity="0.5" />
              <circle cx="0" cy="200" r="2" fill="#00E5CC" opacity="0.5" />
              <circle cx="200" cy="200" r="2" fill="#FF6B6B" opacity="0.5" />
              <line x1="0" y1="0" x2="200" y2="0" stroke="#00A6FB" strokeWidth="0.5" opacity="0.2" />
              <line x1="0" y1="0" x2="0" y2="200" stroke="#7C4DFF" strokeWidth="0.5" opacity="0.2" />
              <line x1="0" y1="0" x2="200" y2="200" stroke="#00E5CC" strokeWidth="0.5" opacity="0.2" />
            </pattern>
          </defs>
          <rect width="100%" height="100%" fill="url(#network-pattern)" />
        </svg>

        {/* Floating Geometric Shapes */}
        {[...Array(6)].map((_, i) => (
          <motion.div
            key={i}
            className="absolute"
            style={{
              width: `${60 + i * 20}px`,
              height: `${60 + i * 20}px`,
              left: `${15 + (i % 3) * 30}%`,
              top: `${10 + Math.floor(i / 3) * 40}%`,
              border: '1px solid',
              borderColor: i % 2 === 0 ? '#00A6FB' : '#7C4DFF',
              opacity: 0.1,
            }}
            animate={{
              rotate: [0, 90, 180, 270, 360],
              scale: [1, 1.1, 1],
              opacity: [0.1, 0.2, 0.1],
            }}
            transition={{
              duration: 30 + i * 5,
              repeat: Infinity,
              ease: "linear",
            }}
          />
        ))}

        {/* Gradient Waves */}
        <motion.div
          className="absolute inset-0"
          style={{
            background: `
              radial-gradient(ellipse at 20% 30%, rgba(0, 166, 251, 0.15) 0%, transparent 40%),
              radial-gradient(ellipse at 80% 70%, rgba(124, 77, 255, 0.15) 0%, transparent 40%),
              radial-gradient(ellipse at 50% 50%, rgba(0, 229, 204, 0.1) 0%, transparent 50%)
            `,
          }}
          animate={{
            opacity: [0.3, 0.5, 0.3],
          }}
          transition={{
            duration: 10,
            repeat: Infinity,
            ease: "easeInOut",
          }}
        />
      </div>

      {/* Language Switcher - Top Right */}
      <div className={`absolute top-4 sm:top-6 ${isRTL ? 'left-4 sm:left-6' : 'right-4 sm:right-6'} z-20`}>
        <LanguageSwitcher />
      </div>

      {/* Design Element Image - Bottom Right (Above background, below content) */}
      <motion.div
        className="absolute bottom-0 w-[350px] sm:w-[450px] md:w-[550px] lg:w-[650px] h-[350px] sm:h-[450px] md:h-[550px] lg:h-[650px] pointer-events-none z-[5]"
        style={{
          [isRTL ? 'left' : 'right']: '-80px',
          opacity: 0.08,
          mixBlendMode: 'screen',
          filter: 'blur(0.2px)',
        }}
        initial={{ opacity: 0, x: isRTL ? -150 : 150, y: 100 }}
        animate={{ opacity: 1, x: 0, y: 0 }}
        transition={{ duration: 1.5, delay: 0.5, ease: "easeOut" }}
      >
        <Image
          src="/background-coming-soon.png"
          alt=""
          fill
          className={`object-contain ${isRTL ? 'object-bottom-left' : 'object-bottom-right'}`}
          style={{
            maskImage: `linear-gradient(to ${isRTL ? 'top right' : 'top left'}, rgba(0,0,0,0.4) 0%, rgba(0,0,0,0.2) 30%, transparent 70%)`,
            WebkitMaskImage: `linear-gradient(to ${isRTL ? 'top right' : 'top left'}, rgba(0,0,0,0.4) 0%, rgba(0,0,0,0.2) 30%, transparent 70%)`,
          }}
          priority
        />
      </motion.div>

      {/* Main Content */}
      <div className="relative z-10 flex items-center justify-center min-h-screen p-4">
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 1, ease: "easeOut" }}
          className="max-w-4xl w-full"
          dir={isRTL ? 'rtl' : 'ltr'}
        >
          {/* Main Content Card */}
          <div
            className="relative overflow-hidden rounded-2xl shadow-2xl mx-2 sm:mx-0"
            style={{
              background: 'linear-gradient(135deg, rgba(26, 35, 50, 0.9) 0%, rgba(15, 20, 25, 0.8) 100%)',
              backdropFilter: 'blur(20px)',
              border: '1px solid rgba(0, 166, 251, 0.2)',
              boxShadow: '0 0 40px rgba(0, 166, 251, 0.1)',
            }}
          >
            <div className="p-8 sm:p-12 md:p-16">
              {/* Tech Badge */}
              <motion.div
                initial={{ scale: 0.9, opacity: 0 }}
                animate={{ scale: 1, opacity: 1 }}
                transition={{ delay: 0.3, duration: 0.8 }}
                className="flex justify-center mb-10"
              >
                <div
                  className="px-8 py-3 relative"
                  style={{
                    background: 'linear-gradient(135deg, rgba(0, 166, 251, 0.1) 0%, rgba(124, 77, 255, 0.1) 100%)',
                    clipPath: 'polygon(10% 0%, 90% 0%, 100% 50%, 90% 100%, 10% 100%, 0% 50%)',
                    border: '1px solid rgba(0, 166, 251, 0.3)',
                  }}
                >
                  <span className="text-sm font-medium tracking-[0.3em] uppercase" style={{ color: '#00E5CC' }}>
                    {t('comingSoon.badge')}
                  </span>
                </div>
              </motion.div>

              {/* Brand Name with Modern Typography */}
              <motion.div
                initial={{ scale: 0.95, opacity: 0 }}
                animate={{ scale: 1, opacity: 1 }}
                transition={{ delay: 0.5, duration: 0.8 }}
                className="text-center mb-10"
              >
                <h1
                  className="font-bold mb-6 mx-auto"
                  style={{
                    fontSize: 'clamp(2rem, 5vw, 5rem)',
                    letterSpacing: '0.02em',
                    background: 'linear-gradient(135deg, #00A6FB 0%, #7C4DFF 50%, #00E5CC 100%)',
                    WebkitBackgroundClip: 'text',
                    WebkitTextFillColor: 'transparent',
                    backgroundClip: 'text',
                    filter: 'drop-shadow(0 0 30px rgba(0, 166, 251, 0.3))',
                  }}
                >
                  EXPOSTUDIOS
                </h1>

                {/* Modern Divider */}
                <div className="flex items-center justify-center gap-4 mb-6">
                  <div className="h-[1px] w-24" style={{ background: 'linear-gradient(90deg, transparent, #00A6FB)' }} />
                  <div className="w-2 h-2 rotate-45" style={{ backgroundColor: '#7C4DFF' }} />
                  <div className="h-[1px] w-24" style={{ background: 'linear-gradient(90deg, #00A6FB, transparent)' }} />
                </div>

                <p className="text-lg sm:text-xl font-medium tracking-wide mb-3" style={{ color: '#E8ECEF' }}>
                  {t('hero.title')}
                </p>
                <p className="text-sm sm:text-base font-normal opacity-80 px-4 sm:px-0" style={{ color: '#8A94A6' }}>
                  {t('hero.subtitle')}
                </p>
              </motion.div>

              {/* Our Promise */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.65, duration: 0.8 }}
                className="text-center mb-8 px-4"
              >
                <p className="text-sm sm:text-base font-light italic opacity-90" style={{ color: '#8A94A6' }}>
                  "{t('hero.description')}"
                </p>
              </motion.div>

              {/* Our Process */}
              <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 0.7, duration: 0.8 }}
                className="text-center mb-12"
              >
                <p className="text-xs font-medium tracking-wider opacity-70 mb-3 uppercase" style={{ color: '#7C4DFF' }}>
                  {t('process.title')}
                </p>
                <div className="flex items-center justify-center flex-wrap gap-2 text-xs sm:text-sm">
                  <span style={{ color: '#00A6FB' }}>{t('process.steps.research')}</span>
                  <span style={{ color: '#00E5CC' }}>→</span>
                  <span style={{ color: '#7C4DFF' }}>{t('process.steps.design')}</span>
                  <span style={{ color: '#00E5CC' }}>→</span>
                  <span style={{ color: '#00A6FB' }}>{t('process.steps.production')}</span>
                  <span style={{ color: '#00E5CC' }}>→</span>
                  <span style={{ color: '#7C4DFF' }}>{t('process.steps.launch')}</span>
                </div>
              </motion.div>

              {/* Early Access Form */}
              {newsletterEnabled && (
                <motion.form
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.75, duration: 0.8 }}
                onSubmit={handleSubmit}
                className="mb-12 max-w-lg mx-auto"
              >
                <div
                  className="relative rounded-lg overflow-hidden p-[1px]"
                  style={{
                    background: isHovered
                      ? 'linear-gradient(135deg, #00A6FB 0%, #7C4DFF 50%, #00E5CC 100%)'
                      : 'linear-gradient(135deg, rgba(0, 166, 251, 0.5) 0%, rgba(124, 77, 255, 0.5) 100%)',
                    transition: 'all 0.3s ease',
                  }}
                  onMouseEnter={() => setIsHovered(true)}
                  onMouseLeave={() => setIsHovered(false)}
                >
                  <div
                    className="rounded-lg overflow-hidden flex flex-col sm:flex-row"
                    style={{ backgroundColor: '#1A2332' }}
                  >
                    <input
                      type="email"
                      value={email}
                      onChange={(e) => setEmail(e.target.value)}
                      placeholder={t('newsletter.placeholder')}
                      className="flex-1 bg-transparent px-6 py-4 outline-none font-normal text-base"
                      style={{ color: '#E8ECEF' }}
                      required
                      dir="ltr"
                    />
                    <motion.button
                      whileHover={{ scale: 1.02 }}
                      whileTap={{ scale: 0.98 }}
                      type="submit"
                      className="px-8 py-4 font-medium tracking-wide transition-all duration-300 text-sm uppercase"
                      style={{
                        background: 'linear-gradient(135deg, #00A6FB 0%, #7C4DFF 100%)',
                        color: '#FFFFFF',
                      }}
                    >
                      {isSubmitted ? t('newsletter.success') : t('newsletter.submit')}
                    </motion.button>
                  </div>
                </div>

                {isSubmitted && (
                  <motion.p
                    initial={{ opacity: 0, y: -10 }}
                    animate={{ opacity: 1, y: 0 }}
                    className="text-center mt-4 font-normal"
                    style={{ color: '#00E5CC' }}
                  >
                    {t('newsletter.confirmation')}
                  </motion.p>
                )}
              </motion.form>
              )}

              {/* Core Services - Modern Grid */}
              <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 0.9, duration: 0.8 }}
                className="grid grid-cols-2 sm:grid-cols-4 gap-4 mb-12"
              >
                {serviceItems.map((item, index) => (
                  <motion.div
                    key={index}
                    whileHover={{ scale: 1.05, y: -5 }}
                    className="text-center p-6 rounded-lg transition-all duration-300 group relative overflow-hidden"
                    style={{
                      background: 'linear-gradient(135deg, rgba(26, 35, 50, 0.6) 0%, rgba(26, 35, 50, 0.3) 100%)',
                      border: '1px solid rgba(0, 166, 251, 0.2)',
                    }}
                  >
                    {/* Hover Glow Effect */}
                    <div
                      className="absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-300"
                      style={{
                        background: `radial-gradient(circle at center, ${item.color}20 0%, transparent 70%)`,
                      }}
                    />

                    <div className="relative z-10">
                      <div className="mb-4 flex justify-center" style={{ color: item.color }}>
                        {item.icon}
                      </div>
                      <h3 className="font-semibold text-sm mb-1" style={{ color: '#E8ECEF' }}>
                        {t(item.titleKey)}
                      </h3>
                      <p className="text-xs font-normal opacity-70" style={{ color: '#8A94A6' }}>
                        {t(item.subtitleKey)}
                      </p>
                    </div>
                  </motion.div>
                ))}
              </motion.div>

              {/* Capabilities */}
              <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 1.0, duration: 0.8 }}
                className="mb-12"
              >
                <h3 className="text-center text-sm font-medium tracking-[0.2em] mb-6 uppercase" style={{ color: '#7C4DFF' }}>
                  {t('expertise.title')}
                </h3>
                <div className="flex flex-wrap justify-center gap-3">
                  {[
                    t('expertise.items.exhibition'),
                    t('expertise.items.digital'),
                    t('expertise.items.interactive'),
                    t('expertise.items.brand'),
                    t('expertise.items.virtual')
                  ].map((spec, index) => (
                    <motion.span
                      key={index}
                      initial={{ opacity: 0, scale: 0.8 }}
                      animate={{ opacity: 1, scale: 1 }}
                      transition={{ delay: 1.1 + index * 0.05, duration: 0.3 }}
                      className="px-4 py-2 text-xs font-medium rounded-full"
                      style={{
                        background: 'linear-gradient(135deg, rgba(0, 166, 251, 0.1) 0%, rgba(124, 77, 255, 0.1) 100%)',
                        border: '1px solid rgba(0, 166, 251, 0.3)',
                        color: '#E8ECEF',
                      }}
                    >
                      {spec}
                    </motion.span>
                  ))}
                </div>
              </motion.div>

              {/* Modern Social Links */}
              <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 1.1, duration: 0.8 }}
                className="flex justify-center gap-4"
              >
                {[
                  {
                    name: "LinkedIn",
                    icon: (
                      <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"/>
                      </svg>
                    )
                  },
                  {
                    name: "Instagram",
                    icon: (
                      <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zM5.838 12a6.162 6.162 0 1112.324 0 6.162 6.162 0 01-12.324 0zM12 16a4 4 0 110-8 4 4 0 010 8zm4.965-10.405a1.44 1.44 0 112.881.001 1.44 1.44 0 01-2.881-.001z"/>
                      </svg>
                    )
                  },
                  {
                    name: "Behance",
                    icon: (
                      <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M22 7h-7v-2h7v2zm1.726 10c-.442 1.297-2.029 3-5.101 3-3.074 0-5.564-1.729-5.564-5.675 0-3.91 2.325-5.92 5.466-5.92 3.082 0 4.964 1.782 5.375 4.426.078.506.109 1.188.095 2.14h-8.027c.13 3.211 3.483 3.312 4.588 2.029h3.168zm-7.686-4h4.965c-.105-1.547-1.136-2.219-2.477-2.219-1.466 0-2.277.768-2.488 2.219zm-9.574 6.988h-6.466v-14.967h6.953c5.476.081 5.58 5.444 2.72 6.906 3.461 1.26 3.577 8.061-3.207 8.061zm-3.466-8.988h3.584c2.508 0 2.906-3-.312-3h-3.272v3zm3.391 3h-3.391v3.016h3.341c3.055 0 2.868-3.016.05-3.016z"/>
                      </svg>
                    )
                  },
                  {
                    name: "X",
                    icon: (
                      <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
                      </svg>
                    )
                  }
                ].map((social) => (
                  <motion.a
                    key={social.name}
                    href="#"
                    whileHover={{ scale: 1.1, y: -2 }}
                    whileTap={{ scale: 0.95 }}
                    className="w-12 h-12 rounded-lg flex items-center justify-center transition-all duration-300"
                    style={{
                      background: 'linear-gradient(135deg, rgba(26, 35, 50, 0.8) 0%, rgba(26, 35, 50, 0.4) 100%)',
                      border: '1px solid rgba(0, 166, 251, 0.2)',
                      color: '#8A94A6',
                    }}
                    aria-label={social.name}
                    onMouseEnter={(e) => {
                      e.currentTarget.style.borderColor = '#00A6FB';
                      e.currentTarget.style.color = '#00A6FB';
                    }}
                    onMouseLeave={(e) => {
                      e.currentTarget.style.borderColor = 'rgba(0, 166, 251, 0.2)';
                      e.currentTarget.style.color = '#8A94A6';
                    }}
                  >
                    {social.icon}
                  </motion.a>
                ))}
              </motion.div>
            </div>

            {/* Bottom Accent */}
            <div
              className="h-[1px]"
              style={{
                background: 'linear-gradient(90deg, transparent 10%, #00A6FB 30%, #7C4DFF 50%, #00E5CC 70%, transparent 90%)',
              }}
            />
          </div>

          {/* Copyright */}
          <motion.p
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ delay: 1.3, duration: 0.8 }}
            className="text-center text-xs font-normal tracking-wider mt-8 opacity-60"
            style={{ color: '#8A94A6' }}
          >
            {t('footer.copyright')}
          </motion.p>
        </motion.div>
      </div>
    </div>
  );
}